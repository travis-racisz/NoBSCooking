{"ast":null,"code":"var V3_URL = 'https://js.stripe.com/v3';\n\nvar injectScript = function injectScript() {\n  var script = document.createElement('script');\n  script.src = V3_URL;\n  var headOrBody = document.head || document.body;\n\n  if (!headOrBody) {\n    throw new Error('Expected document.body not to be null. Stripe.js requires a <body> element.');\n  }\n\n  headOrBody.appendChild(script);\n  return script;\n};\n\nvar registerWrapper = function registerWrapper(stripe) {\n  if (!stripe || !stripe._registerWrapper) {\n    return;\n  }\n\n  stripe._registerWrapper({\n    name: 'stripe-js',\n    version: \"1.3.1\"\n  });\n}; // Execute our own script injection after a tick to give users time to\n// do their own script injection.\n\n\nvar stripePromise = Promise.resolve().then(function () {\n  if (typeof window === 'undefined') {\n    // Resolve to null when imported server side. This makes the module\n    // safe to import in an isomorphic code base.\n    return null;\n  }\n\n  if (window.Stripe) {\n    return window.Stripe;\n  }\n\n  var script = document.querySelector(\"script[src=\\\"\".concat(V3_URL, \"\\\"], script[src=\\\"\").concat(V3_URL, \"/\\\"]\")) || injectScript();\n  return new Promise(function (resolve, reject) {\n    script.addEventListener('load', function () {\n      if (window.Stripe) {\n        resolve(window.Stripe);\n      } else {\n        reject(new Error('Stripe.js not available'));\n      }\n    });\n    script.addEventListener('error', function () {\n      reject(new Error('Failed to load Stripe.js'));\n    });\n  });\n});\nvar loadCalled = false;\nstripePromise[\"catch\"](function (err) {\n  if (!loadCalled) console.warn(err);\n});\n\nvar loadStripe = function loadStripe() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  loadCalled = true;\n  return stripePromise.then(function (maybeStripe) {\n    if (maybeStripe === null) {\n      return null;\n    }\n\n    var stripe = maybeStripe.apply(void 0, args);\n    registerWrapper(stripe);\n    return stripe;\n  });\n};\n\nexport { loadStripe };","map":{"version":3,"sources":["/Users/travisracisz/dev/assignments/busybs/node_modules/@stripe/stripe-js/dist/stripe.esm.js"],"names":["V3_URL","injectScript","script","document","createElement","src","headOrBody","head","body","Error","appendChild","registerWrapper","stripe","_registerWrapper","name","version","stripePromise","Promise","resolve","then","window","Stripe","querySelector","concat","reject","addEventListener","loadCalled","err","console","warn","loadStripe","_len","arguments","length","args","Array","_key","maybeStripe","apply"],"mappings":"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","sourcesContent":["var V3_URL = 'https://js.stripe.com/v3';\n\nvar injectScript = function injectScript() {\n  var script = document.createElement('script');\n  script.src = V3_URL;\n  var headOrBody = document.head || document.body;\n\n  if (!headOrBody) {\n    throw new Error('Expected document.body not to be null. Stripe.js requires a <body> element.');\n  }\n\n  headOrBody.appendChild(script);\n  return script;\n};\n\nvar registerWrapper = function registerWrapper(stripe) {\n  if (!stripe || !stripe._registerWrapper) {\n    return;\n  }\n\n  stripe._registerWrapper({\n    name: 'stripe-js',\n    version: \"1.3.1\"\n  });\n}; // Execute our own script injection after a tick to give users time to\n// do their own script injection.\n\n\nvar stripePromise = Promise.resolve().then(function () {\n  if (typeof window === 'undefined') {\n    // Resolve to null when imported server side. This makes the module\n    // safe to import in an isomorphic code base.\n    return null;\n  }\n\n  if (window.Stripe) {\n    return window.Stripe;\n  }\n\n  var script = document.querySelector(\"script[src=\\\"\".concat(V3_URL, \"\\\"], script[src=\\\"\").concat(V3_URL, \"/\\\"]\")) || injectScript();\n  return new Promise(function (resolve, reject) {\n    script.addEventListener('load', function () {\n      if (window.Stripe) {\n        resolve(window.Stripe);\n      } else {\n        reject(new Error('Stripe.js not available'));\n      }\n    });\n    script.addEventListener('error', function () {\n      reject(new Error('Failed to load Stripe.js'));\n    });\n  });\n});\nvar loadCalled = false;\nstripePromise[\"catch\"](function (err) {\n  if (!loadCalled) console.warn(err);\n});\nvar loadStripe = function loadStripe() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  loadCalled = true;\n  return stripePromise.then(function (maybeStripe) {\n    if (maybeStripe === null) {\n      return null;\n    }\n\n    var stripe = maybeStripe.apply(void 0, args);\n    registerWrapper(stripe);\n    return stripe;\n  });\n};\n\nexport { loadStripe };\n"]},"metadata":{},"sourceType":"module"}